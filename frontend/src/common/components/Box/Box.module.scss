$spaces: 'p', 'pt', 'pb', 'pr', 'pl', 'm', 'mt', 'mb', 'mr', 'ml';
$sizes: 'xxs', 'xs', 'xsm', 'sm', 'md', 'lg', 'xlg', 'xxl', 'xxxl';

$spacesMap: (
  'p' : 'padding',
  'pt': 'padding-top',
  'pb': 'padding-bottom',
  'pr': 'padding-right',
  'pl': 'padding-left',
  'm' : 'margin',
  'mt': 'margin-top',
  'mb': 'margin-bottom',
  'mr': 'margin-right',
  'ml': 'margin-left'
);

$sizesToOffsets: (
  'xxxl' : $offset-xxxl,  // 100px
  'xxl'  : $offset-xxl,   // 60px
  'xlg'  : $offset-xlg,   // 48px
  'lg'   : $offset-lg,    // 36px
  'md'   : $offset-md,    // 24px
  'sm'   : $offset-sm,    // 16px
  'xsm'  : $offset-xsm,   // 12px
  'xs'   : $offset-xs,    // 8px
  'xxs'  : $offset-xxs,   // 4px
  'h'    : $offset-h      // 20px
);

.alignCenter {
  text-align: center;
}

.alignRight {
  text-align: right;
}

.alignLeft {
  text-align: left;
}

.center {
  margin-right: auto;
  margin-left: auto;
}

.inline {
  display: inline-block;
}

// generate example â€“ .pt_md { padding-top: $offset-md }
@mixin stylesByMedia($media: null) {
  @each $space in $spaces {
    @each $size in $sizes {

      .#{$space}_#{$size} {
        @if $media == null {
          #{map-get($spacesMap, $space)}: map-get($sizesToOffsets, $size);
        }
      }
    }
  }
}

@include stylesByMedia()
